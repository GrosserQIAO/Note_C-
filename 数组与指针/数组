// 数组是由类型名，标识符和维数组成的复合数据类型，类型名规定了在数组中存储的数组，维数规定了数组中元素的个数。
1. 数组的定义和初始化
  * 数组的维数必须是字面值常量或const定义的常量，且应该不经编译而获得。
  * 显示初始化：const unsigned array_size=3; int ia[array_size] = {1,2,3};
      注：如果没有显示初始化，则会按照内置类型初始化的方式进行初始化：在函数体外定义的内置数组，其元素均初始化为0；在函数体内定义的内置数组，
          其元素不初始化；不论数组在哪里，类类型数组的初始化均调用其构造函数，如果没有默认构造函数，则必须提供显示初始化。
          
          显示初始化的数组不需要提供数组的维数，编译器会根据元素个数来确定数组长度。如果既规定了数组维度，又有元素个数，但维度大于元素个数，则
          其余填充0.
          
          字符数组的初始化。char ca1[]={'c','+','+'};char ca2[]={'c','+','+','\0'};char ca3[]="c++"； 用字符串字面值赋初值的方法与方法二相同
          会产生一个空格符。ca1的维度是3，而ca2,ca3的维度是4。
          
          不允许数组直接复制或赋值。例如:int a1[](a2)是不合法的，a1=a2也是不合法的
  * 数组操作
      同vector元素一样，数组元素也可以用下标进行访问。但vector用vector::size_type类型来访问，但数组用的是size_t来访问。
      例：const size_t length=5;int a[length];for(size_t i=0;i<length;i++)...
