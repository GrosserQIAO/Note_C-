// 指针是指向某种类型对象的复合数据类型，是用于数组的迭代器。类似于vector的迭代器一样。在指向数组的的指针上使用解引用操作符*和自增操作符++，与
   迭代器用法相类似。
1. 什么是指针
    指针用于指向对象。与迭代器一样，指针提供对其对象的见解访问。不同的是迭代器访问的是容器内的元素，而指针指向单个对象。通俗的讲，指针存储的是
    间接访问对象的地址。
    例：string s("hello world!"); string *s=&s  //&为取址操作符
    * 尽量避免使用数组和指针。指针与低级操作有关，容易产生与繁琐细节相关的错误。而且指针的语法规则也容易产生错误。因此c++中采用vector类和迭代器
      取代数组和指针，采用string类取代c风格字符串。
2. 指针的定义和初始化
    例：string *p; vector<int> *p     //应该从右往左读，讲p定义为一个string类型的指针对象。
    或者：string* p; vector<int>* p
3. 指针的操作
     通过解引用修改指针指向的内容。例：*p="value";*p = &s
     * 指针与引用的区别
         系统会为指针分配内存，指针中存储的是指向的对象的地址，但引用所在地址和对象所在地址相同，是同一对象的不同名字。
4. 利用指针访问数组元素
      * int *p=ai；p +=4; // p指向a[4]
      * int *p=ai;*p1=&ai[4]; ptrdiff_t n=p1-p; // ptrdiff_t 也是一种内置类型，默认为signed
   
